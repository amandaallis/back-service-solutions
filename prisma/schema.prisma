// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Requester {
  id               Int                @id @default(autoincrement())
  name             String
  email            String
  password         String
  phone            String
  RequiredServices RequiredServices[]
}

model Adress {
  id               Int                @id @default(autoincrement())
  street           String
  number           Int
  district         String
  city             String
  cep              String
  providerAdress   ProviderAdress[]
  RequiredServices RequiredServices[]
}

model ServiceList {
  id               Int                @id @default(autoincrement())
  service          String
  typeServiceList  TypeServiceList[]
  RequiredServices RequiredServices[]
}

model Provider {
  id               Int                @id @default(autoincrement())
  email            String
  phone            String
  password         String
  city             String
  typeProvider     String
  providerLegal    ProviderLegal[]
  providerPersonal ProviderPersonal[]
  providerAdress   ProviderAdress[]
  typeServiceList  TypeServiceList[]
  RequiredServices RequiredServices[]
}

model ProviderLegal {
  id          Int       @id @default(autoincrement())
  provider    Provider? @relation(fields: [providerId], references: [id])
  providerId  Int?
  cnpj        String
  companyName String
}

model ProviderPersonal {
  id         Int       @id @default(autoincrement())
  Provider   Provider? @relation(fields: [providerId], references: [id])
  providerId Int?
  name       String
  cpf        String
}

model ProviderAdress {
  id         Int       @id @default(autoincrement())
  adress     Adress?   @relation(fields: [adressId], references: [id])
  adressId   Int?
  provider   Provider? @relation(fields: [providerId], references: [id])
  providerId Int?
}

enum StatusService {
  ON
  OFF
}

model TypeServiceList {
  id               Int                @id @default(autoincrement())
  Provider         Provider?          @relation(fields: [providerId], references: [id])
  providerId       Int?
  ServiceList      ServiceList?       @relation(fields: [serviceListId], references: [id])
  serviceListId    Int?
  status           StatusService
  RequiredServices RequiredServices[]
}

enum StatusRequiredService {
  APPROVED
  REJECTED
  REALIZED
  OPEN
}

model RequiredServices {
  id                    Int                   @id @default(autoincrement())
  //TypeServiceList       TypeServiceList?      @relation(fields: [typeServiceId], references: [id])
  ServiceList           ServiceList?          @relation(fields: [typeServiceId], references: [id])
  typeServiceId         Int?
  Provider              Provider?             @relation(fields: [providerId], references: [id])
  providerId            Int?
  Requester             Requester?            @relation(fields: [requesterId], references: [id])
  requesterId           Int?
  adress                Adress?               @relation(fields: [adressId], references: [id])
  adressId              Int?
  description           String?
  requestedData         DateTime
  updatedAt             DateTime?
  statusRequiredService StatusRequiredService
  TypeServiceList       TypeServiceList?      @relation(fields: [typeServiceListId], references: [id])
  typeServiceListId     Int?
}
